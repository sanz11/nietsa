comprobante model line 1128 relacion de tablas cli8ente y año mes 
SELECT trabajador.`nombre`, trabajador.`apellidos`, trabajador.`cont_mensaje` FROM `trabajador`, `oficios` WHERE oficios.`dni`='70241454' and trabajador.`dni`='70241454';

ipmrimir//

JS
-----------------------------------------------------------------------
 $("#imprimirProveedor").click(function(){
            var docum = $("#txtNumDoc").val();
            var nombre = $("#txtNombre").val();
            
            var flagBS = "B";

            var docum = sintilde(docum);
            var nombre= sintilde(nombre);
        ///
          if(docum==""){docum="--";}
          if(nombre==""){nombre="--";}

        url = base_url+"index.php/compras/proveedor/registro_proveedor_pdf/"+flagBS+"/"+docum+"/"+ nombre;
        window.open(url,'',"width=800,height=600,menubars=no,resizable=no;");
    });


    CONTROLLER
  ---------------------------------------------------------------------------------------
public function registro_familia_pdf($flagbs = 'B', $codigo='', $nombre='')
    {

        $this->load->library('cezpdf');
        $this->load->helper('pdf_helper');
        //prep_pdf();
        $this->cezpdf = new Cezpdf('a4');
        $datacreator = array(
            'Title' => 'Estadillo de ',
            'Name' => 'Estadillo de ',
            'Author' => 'Vicente Producciones',
            'Subject' => 'PDF con Tablas',
            'Creator' => 'info@vicenteproducciones.com',
            'Producer' => 'http://www.vicenteproducciones.com'
        );

        $this->cezpdf->addInfo($datacreator);
        $this->cezpdf->selectFont(APPPATH . 'libraries/fonts/Helvetica.afm');
        $delta = 20;

            

//        $this->cezpdf->ezText('', '', array("leading" => 100));
        $this->cezpdf->ezText('<b>LISTADO FAMILIA DE ARTICULOS</b>', 14, array("leading" => 0, 'left' => 185));
        $this->cezpdf->ezText('', '', array("leading" => 10));


        /* Datos del cliente */


//        /* Listado de detalles */

        $db_data = array();


        $listado_productos = $this->producto_model->listar_familia_pdf($flagbs,$codigo,$nombre);
    
            if (count($listado_productos) > 0) {
                foreach ($listado_productos as $indice => $valor) {
                    $codigo = $valor->FAMI_Codigo;
                    $codigo_interno = $valor->FAMI_CodigoInterno;
                    $descripcion = $valor->FAMI_Descripcion;


                    $db_data[] = array(
                        'cols1' => $indice + 1,
                        'cols2' => $codigo_interno,
                        'cols3' => $descripcion
                    );
                }
            }

        


        $col_names = array(
            'cols1' => '<b>ITEM</b>',
            'cols2' => '<b>CODIGO</b>',
            'cols3' => '<b>DESCRIPCION</b>'
        );

        $this->cezpdf->ezTable($db_data, $col_names, '', array(
            'width' => 525,
            'showLines' => 1,
            'shaded' => 1,
            'showHeadings' => 1,
            'xPos' => 'center',
            'fontSize' => 8,
            'cols' => array(
                'cols1' => array('width' => 30, 'justification' => 'center'),
                'cols2' => array('width' => 70, 'justification' => 'center'),
                'cols3' => array('width' => 245, 'justification' => 'left')
            )
        ));


        $cabecera = array('Content-Type' => 'application/pdf', 'Content-Disposition' => $codificacion . '.pdf', 'Expires' => '0', 'Pragma' => 'cache', 'Cache-Control' => 'private');

        ob_end_clean();

        $this->cezpdf->ezStream($cabecera);
    }

 MODEL
 ----------------------------------------------------------------------------------
  public function listar_familia_pdf($flagBS,$codigo,$nombre)
    {
        $compania = $this->somevar['compania'];

        if($nombre=="--" & $codigo=="--"){
             $sql = "SELECT * from cji_familia f where  f.FAMI_FlagBienServicio='" . $flagBS . "' order by 1 asc "; 
        }else if($codigo !="--" && $nombre =="--"){
                $sql = "SELECT * from cji_familia f where  f.FAMI_FlagBienServicio='" . $flagBS . "' AND  f.FAMI_CodigoInterno LIKE '%".$codigo."%' order by 1 asc "; 
        }else if($nombre !="--" && $codigo == "--"){
                $sql = "SELECT * from cji_familia f where  f.FAMI_FlagBienServicio='" . $flagBS . "' AND  f.FAMI_Descripcion LIKE '%".$nombre."%' order by 1 asc "; 
        }else{
            $sql = "SELECT * from cji_familia f where  f.FAMI_FlagBienServicio='" . $flagBS . "' AND f.FAMI_Descripcion LIKE '%".$nombre."%' AND  f.FAMI_CodigoInterno LIKE '%".$codigo."%' order by 1 asc "; 
        }
       

       

        $query = $this->db->query($sql);
        if ($query->num_rows > 0) {
            foreach ($query->result() as $fila) {
                $data[] = $fila;
            }
            return $data;
        }
    }
---------------------------------------------------
formato moneda de 4 digitos
<?php 

$n1=16179267.059569;
$n2=1655.299;
$total = $n2+$n1;

echo "total suma : ".$total."<br>";

$posicion = strpos ($total, ".");//capturar la posicion del punto = 2
$resul = substr ($total, 0,($posicion+5)); //del total mostramos desde el punto 5 caracteres mas a la derecha
echo "conversion a 4 decimales : ".$resul."<br>";

//le damos formaton de moneda y ya no redondeariamos
$stotal= money_format($resul);
echo "conversion a formato maneda : ".$stotal ."<br>";


function money_format($value) {
  return '$' . number_format($value,4);
}
?>
// 4 decimales 2

$posicion0 = strpos ($sum, ".");
$resul0 = substr ($sum, 0,($posicion0+5)); 
$sumt= '$' . number_format($resul0,4);

    // sin tilde

    JS---------------------------------------
    function sintilde(cadena){
   
   var specialChars = "!@#$^&%*()+=-[]\/{}|:<>?,.";

   
   for (var i = 0; i < specialChars.length; i++) {
       cadena= cadena.replace(new RegExp("\\" + specialChars[i], 'gi'), '');
   }   

   // Lo queremos devolver limpio en minusculas
   cadena = cadena.toLowerCase();

   // Quitamos acentos y "ñ". Fijate en que va sin comillas el primer parametro
   cadena = cadena.replace(/á/gi,"a");
   cadena = cadena.replace(/é/gi,"e");
   cadena = cadena.replace(/í/gi,"i");
   cadena = cadena.replace(/ó/gi,"o");
   cadena = cadena.replace(/ú/gi,"u");
   cadena = cadena.replace(/ñ/gi,"n");
   return cadena;
}

